<div class="highlight" ><pre><span class="c">/**</span>
<span class="c"> * The JavaScript Number Object</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @class Number</span>
<span class="c"> * @constructor</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Largest Number that is less than infinity</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property MAX_VALUE</span>
<span class="c"> * @type Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Smallest Number that is greater than negative infinity</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property MIN_VALUE</span>
<span class="c"> * @type Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Not a Number</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property NaN</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Out of range negative Number</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property NEGATIVE_INFINITY</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Out of range positive Number</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property POSITIVE_INFINITY</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Allows you to add properties and methods to the Object</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property prototype</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Convert the value of the Object into an exponential notation;</span>
<span class="c"> *  since FireFox 1.0 and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method toExponential</span>
<span class="c"> * @param num {Number} Required. Specifies the Number of decimal places in the exponential notation</span>
<span class="c"> * @return {Number} the converted Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Round a Number to the specified Number of decimals;</span>
<span class="c"> *  since FireFox 1.0 and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method toFixed</span>
<span class="c"> * @param num {Number} Required. Specifies the Number of decimals to use</span>
<span class="c"> * @return {Number} the converted Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Converts the value of the Object into an exponential notation if it has more digits than specified;</span>
<span class="c"> *  since FireFox 1.0 and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method toPrecision</span>
<span class="c"> * @param num {Number} Required. Specifies the minimum Number of digits the value must have to be converted to exponential notation</span>
<span class="c"> * @return {Number} the converted Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Converts a Number Object to String;</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method toString</span>
<span class="c"> * @param radix {Number} Optional. Specifies the base radix you would like the Number displayed as.</span>
<span class="c"> *</span>
<span class="c"> *  Examples:</span>
<span class="c"> *      2 - The Number will show as a binary value</span>
<span class="c"> *      8 - The Number will show as an octal value</span>
<span class="c"> *      16 - The Number will show as an hexadecimal value</span>
<span class="c"> *</span>
<span class="c"> * @return {String} the Number as a String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The valueOf() method returns the Number as a String.</span>
<span class="c"> * The String output is always equal to the Number as it&#39;s represented in base 10.</span>
<span class="c"> * The valueOf() method is usually called automatically by JavaScript behind the scenes and not explicitly in code.</span>
<span class="c"> *  since FireFox 1.0 and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method valueOf</span>
<span class="c"> * @return {String} the Number as a base10 String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Displays the Number using regional preferences.</span>
<span class="c"> *  since FireFox 2.0 and IE 3.0</span>
<span class="c"> *</span>
<span class="c"> * @method toLocaleString</span>
<span class="c"> * @return {String} the Number as a localized String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Returns the source-code used to generate Number.</span>
<span class="c"> *  since FireFox 1.5</span>
<span class="c"> *</span>
<span class="c"> * @method toSource</span>
<span class="c"> * @return {String} the source-code that generated the Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>
</pre></div>
