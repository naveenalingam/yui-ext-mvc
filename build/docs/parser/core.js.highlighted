<div class="highlight" ><pre><span class="c">/*</span>
<span class="c"> * Copyright (c) 2009, Matt Snider, LLC All rights reserved.</span>
<span class="c"> * Version: 1.0.01</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The Core object manages the MVC architecture of the pages and namespacing.</span>
<span class="c"> * @module mvc</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * This file setups the Core MVC namespace.</span>
<span class="c"> * @class Core</span>
<span class="c"> * @static</span>
<span class="c"> */</span>
<span class="o">(</span><span class="k">function</span><span class="o">()</span> <span class="o">{</span>
    <span class="c">// the log severity level constants, used to determine if a debug statmenet should be logged or not</span>
<span class="c"></span>    <span class="k">var</span> <span class="nx">_LOG_LEVEL</span> <span class="o">=</span> <span class="o">{</span>
		<span class="nx">ALL</span><span class="o">:</span> <span class="m">1</span><span class="o">,</span> <span class="c">// developer environments</span>
<span class="c"></span>		<span class="nx">DEBUG</span><span class="o">:</span> <span class="m">2</span><span class="o">,</span>
		<span class="nx">INFO</span><span class="o">:</span> <span class="m">3</span><span class="o">,</span> <span class="c">// production environments should be set to 3 or higher</span>
<span class="c"></span>		<span class="nx">WARN</span><span class="o">:</span> <span class="m">4</span><span class="o">,</span>
		<span class="nx">SEVERE</span><span class="o">:</span> <span class="m">5</span>
    <span class="o">};</span>

    <span class="c">// private namespace</span>
<span class="c"></span>	<span class="k">var</span> <span class="nx">_logLevel</span> <span class="o">=</span> <span class="nx">_LOG_LEVEL</span><span class="o">.</span><span class="nx">INFO</span><span class="o">,</span>
        <span class="nx">_WL</span> <span class="o">=</span> <span class="nb">window</span><span class="o">.</span><span class="nx">location</span><span class="o">;</span>

    <span class="c">// static namespace</span>
<span class="c"></span>    <span class="nb">window</span><span class="o">.</span><span class="nx">Core</span> <span class="o">=</span> <span class="o">{</span>

		<span class="c">/**</span>
<span class="c">		 * The current project version #.</span>
<span class="c">		 * @property Version</span>
<span class="c">		 * @type String</span>
<span class="c">		 * @static</span>
<span class="c">		 * @final</span>
<span class="c">		 */</span>
		<span class="nx">VERSION</span><span class="o">:</span> <span class="s1">&#39;1.0&#39;</span><span class="o">,</span>

        <span class="c">/**</span>
<span class="c">         * The controller namespace.</span>
<span class="c">         * @property Controller</span>
<span class="c">         * @type Object</span>
<span class="c">		 * @static</span>
<span class="c">         */</span>
        <span class="nx">Controller</span><span class="o">:</span> <span class="o">{},</span>

        <span class="c">/**</span>
<span class="c">         * Object namespace placeholder for attaching global constants; inner Function to create Client Singleton.</span>
<span class="c">         * @property Constants</span>
<span class="c">         * @type Object</span>
<span class="c">		 * @static</span>
<span class="c">         */</span>
        <span class="nx">Constants</span><span class="o">:</span> <span class="o">{},</span>

        <span class="c">/**</span>
<span class="c">         * The model object namespace.</span>
<span class="c">         * @property Model</span>
<span class="c">         * @type Object</span>
<span class="c">         */</span>
        <span class="nx">Model</span><span class="o">:</span> <span class="o">{},</span>

        <span class="c">/**</span>
<span class="c">         * The utility namespaces.</span>
<span class="c">         * @property Util</span>
<span class="c">         * @type Object</span>
<span class="c">		 * @static</span>
<span class="c">         */</span>
        <span class="nx">Util</span><span class="o">:</span> <span class="o">{},</span>

        <span class="c">/**</span>
<span class="c">         * The view object namespace.</span>
<span class="c">         * @property View</span>
<span class="c">         * @type Object</span>
<span class="c">		 * @static</span>
<span class="c">         */</span>
        <span class="nx">View</span><span class="o">:</span> <span class="o">{},</span>

		<span class="c">/**</span>
<span class="c">		 * Returns the log level of the application.</span>
<span class="c">		 * @method getLogLevel</span>
<span class="c">		 * @return {Number} The current log level.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">getLogLevel</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> <span class="nx">_logLevel</span><span class="o">;},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the hash from the location object; ensures is a string.</span>
<span class="c">		 * @method getHash</span>
<span class="c">		 * @return {String} The page hash.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getHash</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">hash</span><span class="o">);</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the host from the location object; ensures is a string.</span>
<span class="c">		 * @method getHost</span>
<span class="c">		 * @return {String} The page host.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getHost</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">host</span><span class="o">);</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the page name from the URL.</span>
<span class="c">		 * @method getPageName</span>
<span class="c">		 * @return {String} The page name.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">getPageName</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="nx">Core</span><span class="o">.</span><span class="nx">getUrl</span><span class="o">().</span><span class="nx">replace</span><span class="o">(</span><span class="sr">/.*\/(.*)(\.|\?|\/).*/</span><span class="o">,</span> <span class="s1">&#39;$1&#39;</span><span class="o">);</span>
		<span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the port from the location object; ensures is a string.</span>
<span class="c">		 * @method getPort</span>
<span class="c">		 * @return {String} The page port.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getPort</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">port</span><span class="o">);</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the protocol from the location object; ensures is a string.</span>
<span class="c">		 * @method getProtocol</span>
<span class="c">		 * @return {String} The page protocol.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getProtocol</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">protocol</span><span class="o">);</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the search from the location object; ensures is a string.</span>
<span class="c">		 * @method getSearch</span>
<span class="c">		 * @return {String} The page query string.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getSearch</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">search</span><span class="o">);</span>
        <span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Retrieves the value of XSRF token from the DOM, or throws an exception when not found.</span>
<span class="c">		 * @method getToken</span>
<span class="c">		 * @return {String} The XSRF token.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">getToken</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="o">.</span><span class="nx">util</span><span class="o">.</span><span class="nx">Form</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">getValue</span><span class="o">(</span><span class="s1">&#39;javascript-token&#39;</span><span class="o">);</span>

			<span class="k">if</span> <span class="o">(!</span> <span class="nx">token</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">throw</span> <span class="o">(</span><span class="s1">&#39;Token Node requested before DOM INPUT node &quot;javascript-token&quot; was made available.&#39;</span><span class="o">);</span>
			<span class="o">}</span>

			<span class="nx">Core</span><span class="o">.</span><span class="nx">getToken</span> <span class="o">=</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
				<span class="k">return</span> <span class="nx">token</span><span class="o">;</span>
			<span class="o">};</span>

			<span class="k">return</span> <span class="nx">Core</span><span class="o">.</span><span class="nx">getToken</span><span class="o">();</span>
		<span class="o">},</span>

        <span class="c">/**</span>
<span class="c">		 * Retrieves the URL from the location object; ensures is a string.</span>
<span class="c">		 * @method getUrl</span>
<span class="c">		 * @return {String} The page URL.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
        <span class="nx">getUrl</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">_WL</span><span class="o">.</span><span class="nx">href</span><span class="o">);</span>
        <span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Sets the log level of the application.</span>
<span class="c">		 * @method setLogLevel</span>
<span class="c">		 * @param lvl {Number} Required. The new log level.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">setLogLevel</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">lvl</span><span class="o">)</span> <span class="o">{</span><span class="nx">_logLevel</span> <span class="o">=</span> <span class="nx">lvl</span><span class="o">;},</span>

        <span class="c">/**</span>
<span class="c">         * Refreshes the page by calling window.location.reload.</span>
<span class="c">         * @method reload</span>
<span class="c">         * @static</span>
<span class="c">         */</span>
        <span class="nx">reload</span><span class="o">:</span> <span class="k">function</span><span class="o">()</span> <span class="o">{</span>
            <span class="nx">_WL</span><span class="o">.</span><span class="nx">reload</span><span class="o">();</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">         * Replaces the page by calling window.location.replace(DOMString URL); does not call create a browser history node.</span>
<span class="c">         * @method replace</span>
<span class="c">         * @param url {String} Optional. The URL.</span>
<span class="c">         * @static</span>
<span class="c">         */</span>
        <span class="nx">replace</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">url</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(!</span> <span class="nx">url</span><span class="o">)</span> <span class="o">{</span><span class="nx">url</span> <span class="o">=</span> <span class="nb">window</span><span class="o">.</span><span class="nx">location</span><span class="o">.</span><span class="nx">href</span><span class="o">;}</span>
            <span class="nx">_WL</span><span class="o">.</span><span class="nx">replace</span><span class="o">(</span><span class="s1">&#39;&#39;</span> <span class="o">+</span> <span class="nx">url</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">};</span>
<span class="o">})();</span>
</pre></div>
