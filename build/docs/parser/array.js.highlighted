<div class="highlight" ><pre><span class="c">/**</span>
<span class="c"> * The JavaScript Array Object.</span>
<span class="c"> *  since FireFox 1.0, Netscape 2.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @class Array</span>
<span class="c"> * @constructor</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Allows you to add properties and methods to the object.</span>
<span class="c"> *  since FireFox 1.0, Netscape 2.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property prototype</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Sets or returns the number of elements in an array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 2.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property length</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The concat() method is used to join two or more arrays.</span>
<span class="c"> *  This method does not change the existing arrays, it only returns a copy of the joined arrays.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method concat</span>
<span class="c"> * @return {Array} A new array containing the combined arrays.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The join() method is used to put all the elements of an array into a string.</span>
<span class="c"> *  The elements will be separated by a specified separator.</span>
<span class="c"> *  since FireFox 1.0, Netscape 3.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method join</span>
<span class="c"> * @param separator {String} Optional. Specifies the separator to be used.</span>
<span class="c"> * @return {String} The array values as a string separeted by separator.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The pop() method is used to remove and return the last element of an array.</span>
<span class="c"> *  This method changes the length of the array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method pop</span>
<span class="c"> * @return {Object} The last element in the array.</span>
<span class="c"> * @see push</span>
<span class="c"> * @see shift</span>
<span class="c"> * @see unshift</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The push() method adds one or more elements to the end of an array and returns the new length.</span>
<span class="c"> *  This method changes the length of the array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method push</span>
<span class="c"> * @param newelement1 {Object} Required. The first object to append.</span>
<span class="c"> * @param newelementX {Object} Optional. Any number of additional objects parameters to append.</span>
<span class="c"> * @return {Array} The array calling method with new elements.</span>
<span class="c"> * @see pop</span>
<span class="c"> * @see shift</span>
<span class="c"> * @see unshift</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The reverse() method is used to reverse the order of the elements in an array.</span>
<span class="c"> *  The reverse() method changes the original array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 3.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method reverse</span>
<span class="c"> * @return {Array} The array calling method.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The shift() method is used to remove and return the first element of an array.</span>
<span class="c"> *  This method changes the length of the array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method shift</span>
<span class="c"> * @return {Object} The first element in the array.</span>
<span class="c"> * @see pop</span>
<span class="c"> * @see push</span>
<span class="c"> * @see unshift</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The slice() method returns selected elements from an existing array.</span>
<span class="c"> *  You can use negative numbers to select from the end of the array.</span>
<span class="c"> *  If end is not specified, slice() selects all elements from the specified start position and to the end of the array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method slice</span>
<span class="c"> * @param start {Number} Required. Specify where to start the selection. Must be a number.</span>
<span class="c"> * @param end {Number} Optional. Specify where to end  the selection. Must be a number.</span>
<span class="c"> * @return {Array} The elements removed from the array.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The sort() method is used to sort the elements of an array.</span>
<span class="c"> *  The sort() method will sort the elements alphabetically by default. However, this means that numbers will not be sorted correctly (40 comes before 5). To sort numbers, you must create a function that compare numbers.</span>
<span class="c"> *  After using the sort() method, the array is changed.</span>
<span class="c"> *  since FireFox 1.0, Netscape 3.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * sortby for number sorting is:</span>
<span class="c"> *  function sortNumber(a,b){return a - b;}</span>
<span class="c"> *</span>
<span class="c"> * @method sort</span>
<span class="c"> * @param sortby {Function} Optional. Specifies the sort order. Must be a function.</span>
<span class="c"> * @return {Array} The array calling method.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The splice() method is used to remove and add new elements to an array.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 5.5</span>
<span class="c"> *</span>
<span class="c"> * @method splice</span>
<span class="c"> * @param index {Number} Required. Specify where to add/remove elements. Must be a number.</span>
<span class="c"> * @param howmany {Number} Required Specify how many elements should be removed. Must be a number, but can be &quot;0&quot;.</span>
<span class="c"> * @param element1 {Object} Optional. Specify a new object to add to the array.</span>
<span class="c"> * @param elementX {Object} Optional. Any number of additional objects parameters to append.</span>
<span class="c"> * @return {Array} The array calling method with new elements.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Returns the source code used to generate array.</span>
<span class="c"> *  This method does not work in Internet Explorer!</span>
<span class="c"> *  since FireFox 1.0 and Netscape 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method toSource</span>
<span class="c"> * @return {String} The source-code that generated the array.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The toString() method converts a array value to a String and returns the result.</span>
<span class="c"> *  The elements in the array will be separated with commas.</span>
<span class="c"> *  since FireFox 1.0, Netscape 3.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method toString</span>
<span class="c"> * @return {String} The array as a String.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The unshift() method adds one or more elements to the beginning of an array and returns the new length.</span>
<span class="c"> *  This method changes the length of the array.</span>
<span class="c"> *  The unshift() method does not work properly in Internet Explorer!</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 6.0</span>
<span class="c"> *</span>
<span class="c"> * @method unshift</span>
<span class="c"> * @return {Number} The new length of the array.</span>
<span class="c"> * @see pop</span>
<span class="c"> * @see push</span>
<span class="c"> * @see shift</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The valueOf() method returns the primitive value of an Array object.</span>
<span class="c"> *  The primitive value is inherited by all objects descended from the Array object.</span>
<span class="c"> *  The valueOf() method is usually called automatically by JavaScript behind the scenes and not explicitly in code.</span>
<span class="c"> *  since FireFox 1.0, Netscape 2.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method valueOf</span>
<span class="c"> * @return {Array} The array primitive.</span>
<span class="c"> * @public</span>
<span class="c"> */</span>
</pre></div>
