<div class="highlight" ><pre><span class="c">/**</span>
<span class="c"> * The JavaScript RegExp Object</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @class RegExp</span>
<span class="c"> * @constructor</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The global property is used to return whether or not the &quot;g&quot; modifier is used in the regular expression.</span>
<span class="c"> * The &quot;g&quot; modifier is set if the regular expression should be tested against all possible matches in the String.</span>
<span class="c"> * This property is &quot;TRUE&quot; if the &quot;g&quot; modifier is set, &quot;FALSE&quot; otherwise.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property global</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The ignoreCase property is used to return whether or not the &quot;i&quot; modifier is used in the regular expression.</span>
<span class="c"> * The &quot;i&quot; modifier is set if the regular expression should ignore the case of characters.</span>
<span class="c"> * This property is &quot;TRUE&quot; if the &quot;i&quot; modifier is set, &quot;FALSE&quot; otherwise.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property ignoreCase</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The input property is the String the pattern match is performed.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property input</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The lastIndex property specifies the index (placement) in the String where to start the next match.</span>
<span class="c"> * The index is a number specifying the placement of the first character after the last match.</span>
<span class="c"> * This property only works if the &quot;g&quot; modifier is set.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property lastIndex</span>
<span class="c"> * @type Number</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The lastMatch property is the last matched characters.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property lastMatch</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The lastParen property is the last parenthesized substring match.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property lastParen</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The leftContext property is the substring in front of the characters most recently matched.</span>
<span class="c"> * This property contains everything from the String from before the match.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property leftContext</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The global property is used to return whether or not the &quot;m&quot; modifier is used in the regular expression.</span>
<span class="c"> * The &quot;m&quot; modifier is set if the regular expression should be tested against possible matches over multiple lines.</span>
<span class="c"> * This property is &quot;TRUE&quot; if the &quot;m&quot; modifier is set, &quot;FALSE&quot; otherwise.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property multiline</span>
<span class="c"> * @type Boolean</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * Allows you to add properties and methods to the object</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property prototype</span>
<span class="c"> * @type Object</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The rightContext property is the substring from after the characters most recently matched.</span>
<span class="c"> * This property contains everything from the String from after the match.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property rightContext</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The source property is used to return the text used for pattern matching.</span>
<span class="c"> * The returned text is everything except the forward slashes and any flags.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @property source</span>
<span class="c"> * @type String</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The compile() method is used to change the regular expression.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method compile</span>
<span class="c"> * @param regexp {String} Required. The new regular expression to search for.</span>
<span class="c"> * @return {Boolean} true, when the regex matches</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The exec() method is used to search for a match of a regular expression in a String.</span>
<span class="c"> * This method returns the matched text if a match is found, and null if not.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method exec</span>
<span class="c"> * @param regexp {String} Required. The String to search.</span>
<span class="c"> * @return {String} found text, or null</span>
<span class="c"> * @public</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The test() method is used to search for a match of a regular expression in a String.</span>
<span class="c"> * This method returns true if a match is found, and false if not.</span>
<span class="c"> *  since FireFox 1.0, Netscape 4.0, and IE 4.0</span>
<span class="c"> *</span>
<span class="c"> * @method exec</span>
<span class="c"> * @param regexp {String} Required. The String to search.</span>
<span class="c"> * @return {Boolean} true, when the regex matches</span>
<span class="c"> * @public</span>
<span class="c"> */</span>
</pre></div>
