<div class="highlight" ><pre><span class="c">/*</span>
<span class="c"> * Copyright (c) 2009, Matt Snider, LLC All rights reserved.</span>
<span class="c"> * Version: 1.0.01</span>
<span class="c"> */</span>

<span class="c">/**</span>
<span class="c"> * The Form module provides helper methods for manipulating Form elements.</span>
<span class="c"> * @module form</span>
<span class="c"> * @title form Utility</span>
<span class="c"> */</span>

<span class="c">// Only use first inclusion of this class.</span>
<span class="c"></span><span class="k">if</span> <span class="o">(!</span> <span class="nx">YAHOO</span><span class="o">.</span><span class="nx">util</span><span class="o">.</span><span class="nx">Form</span><span class="o">)</span> <span class="o">{</span>

<span class="c">/**</span>
<span class="c"> * Provides helper methods for Form elements.</span>
<span class="c"> * @class Form</span>
<span class="c"> * @namespace YAHOO.util</span>
<span class="c"> * @static</span>
<span class="c"> */</span>
<span class="o">(</span><span class="k">function</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">var</span> <span class="nx">_YL</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="o">.</span><span class="nx">lang</span><span class="o">,</span>
        <span class="nx">_YD</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="o">.</span><span class="nx">util</span><span class="o">.</span><span class="nx">Dom</span><span class="o">;</span>

    <span class="k">if</span> <span class="o">(!</span> <span class="nx">_YD</span><span class="o">)</span> <span class="o">{</span><span class="nx">_YL</span><span class="o">.</span><span class="nx">throwError</span><span class="o">.</span><span class="nx">call</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">ERROR_NOT_DEFINED</span><span class="o">,</span> <span class="s1">&#39;YAHOO.util.Dom&#39;</span><span class="o">,</span> <span class="s1">&#39;extend&#39;</span><span class="o">,</span> <span class="s1">&#39;yahoo-ext/form.js&#39;</span><span class="o">);}</span>
    <span class="k">if</span> <span class="o">(!</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">)</span> <span class="o">{</span><span class="nx">_YL</span><span class="o">.</span><span class="nx">throwError</span><span class="o">.</span><span class="nx">call</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">ERROR_NOT_IMPLEMENTED</span><span class="o">,</span> <span class="s1">&#39;YAHOO.util.Form&#39;</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">,</span> <span class="s1">&#39;yahoo-ext/lang.js&#39;</span><span class="o">);}</span>

    <span class="k">var</span> <span class="nx">_YF</span> <span class="o">=</span> <span class="nx">YAHOO</span><span class="o">.</span><span class="nx">namespace</span><span class="o">(</span><span class="s1">&#39;util.Form&#39;</span><span class="o">),</span>
        <span class="nx">$</span> <span class="o">=</span> <span class="nx">_YD</span><span class="o">.</span><span class="nx">get</span><span class="o">;</span>

	<span class="c">// static namespace</span>
<span class="c"></span>    <span class="k">var</span> <span class="nx">_that</span> <span class="o">=</span> <span class="o">{</span>

        <span class="c">/**</span>
<span class="c">         * Removes all values from form fields.</span>
<span class="c">         * @method clear</span>
<span class="c">         * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">         * @param iTypes {Array} Optional. An array of input types to ignore.</span>
<span class="c">         * @static</span>
<span class="c">         */</span>
        <span class="nx">clear</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">iTypes</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">),</span>
                <span class="nx">ignoreTypes</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="nx">is</span><span class="o">(</span><span class="nx">iTypes</span><span class="o">)</span> <span class="o">?</span> <span class="nx">iTypes</span> <span class="o">:</span> <span class="o">[];</span>

            <span class="k">var</span> <span class="nx">fx</span> <span class="o">=</span> <span class="k">function</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">{</span>
                <span class="c">// IE 7 will insert some elements without a type; then test if the node type is supposed to be ignored.</span>
<span class="c"></span>                <span class="k">var</span> <span class="nx">type</span> <span class="o">=</span> <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">getType</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>

                <span class="k">if</span> <span class="o">(</span><span class="nx">type</span> <span class="o">&amp;&amp;</span> <span class="o">-</span><span class="m">1</span> <span class="o">===</span> <span class="nx">ignoreTypes</span><span class="o">.</span><span class="nx">indexOf</span><span class="o">(</span><span class="nx">type</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">clear</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">};</span>

            <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">form</span><span class="o">.</span><span class="nx">getElementsByTagName</span><span class="o">(</span><span class="s1">&#39;input&#39;</span><span class="o">),</span> <span class="nx">fx</span><span class="o">);</span>
            <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">form</span><span class="o">.</span><span class="nx">getElementsByTagName</span><span class="o">(</span><span class="s1">&#39;textarea&#39;</span><span class="o">),</span> <span class="nx">fx</span><span class="o">);</span>
            <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">form</span><span class="o">.</span><span class="nx">getElementsByTagName</span><span class="o">(</span><span class="s1">&#39;select&#39;</span><span class="o">),</span> <span class="k">function</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">{</span>
                <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">clear</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>
            <span class="o">});</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">         * Disables the form and all it&#39;s serializable elements.</span>
<span class="c">         * @method disable</span>
<span class="c">         * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">         * @static</span>
<span class="c">         */</span>
        <span class="nx">disable</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">);</span>
            <span class="nx">form</span><span class="o">.</span><span class="nx">disabled</span> <span class="o">=</span> <span class="s1">&#39;true&#39;</span><span class="o">;</span>
            <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">getFields</span><span class="o">(</span><span class="nx">form</span><span class="o">),</span> <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">disable</span><span class="o">);</span>
        <span class="o">},</span>

        <span class="c">/**</span>
<span class="c">         * Enables the form and all it&#39;s serializable elements.</span>
<span class="c">         * @method enable</span>
<span class="c">         * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">         * @static</span>
<span class="c">         */</span>
        <span class="nx">enable</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">);</span>
            <span class="nx">form</span><span class="o">.</span><span class="nx">disabled</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">;</span>
            <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">getFields</span><span class="o">(</span><span class="nx">form</span><span class="o">),</span> <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">enable</span><span class="o">);</span>
        <span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Retrieves the first non-hidden element of the form.</span>
<span class="c">		 * @method findFirstElement</span>
<span class="c">	     * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">		 * @param iTypes {Array} Optional. An array of input types to ignore; default is &#39;hidden&#39;.</span>
<span class="c">		 * @return {Element} The first field not of the ignored types or NULL.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">findFirstElement</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">iTypes</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">getFields</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="s1">&#39;&#39;</span><span class="o">,</span> <span class="nx">iTypes</span><span class="o">),</span> <span class="k">function</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="nx">fld</span><span class="o">;</span>
			<span class="o">});</span>
		<span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Retrieves the first non-hidden element of the form and focuses on it.</span>
<span class="c">		 * @method focusFirstElement</span>
<span class="c">	     * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">		 * @param iTypes {Array} Optional. An array of input types to ignore; default is &#39;hidden&#39;.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">focusFirstElement</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">iTypes</span><span class="o">)</span> <span class="o">{</span>
			<span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">focus</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">findFirstElement</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">iTypes</span> <span class="o">||</span> <span class="o">[</span><span class="s1">&#39;hidden&#39;</span><span class="o">]));</span>
		<span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Retrieves all serializable elements of the form; sorts them top to bottom, left to right by defualt.</span>
<span class="c">		 *  note: DOM iterating is faster than using getElementsByTagName(&quot;*&quot;)</span>
<span class="c">		 * @method getFields</span>
<span class="c">	     * @param elem {String|Element} Required. The pointer or string reference to DOM Form element.</span>
<span class="c">	     * @param fldName {String} Optional. A name to filter by.</span>
<span class="c">		 * @param iTypes {Array} Optional. List of element types to ignore; default is hidden.</span>
<span class="c">		 * @return {Array} A collection of Form fields.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">getFields</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">fldName</span><span class="o">,</span> <span class="nx">iTypes</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">),</span>
				<span class="nx">set</span> <span class="o">=</span> <span class="o">[];</span>

			<span class="k">if</span> <span class="o">(!</span> <span class="nx">form</span><span class="o">)</span> <span class="o">{</span><span class="k">return</span> <span class="nx">set</span><span class="o">;}</span>
            <span class="k">var</span> <span class="nx">ignoreTypes</span> <span class="o">=</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">isArray</span><span class="o">(</span><span class="nx">iTypes</span><span class="o">)</span> <span class="o">?</span> <span class="nx">iTypes</span> <span class="o">:</span> <span class="o">[];</span>

			<span class="c">// should be redefined each time, because of closure on &#39;set&#39;</span>
<span class="c"></span>			<span class="k">var</span> <span class="nx">fn</span> <span class="o">=</span> <span class="k">function</span><span class="o">(</span><span class="nx">nodes</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">for</span> <span class="o">(</span><span class="k">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="m">0</span><span class="o">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">nodes</span><span class="o">.</span><span class="nx">length</span><span class="o">;</span> <span class="nx">i</span> <span class="o">+=</span> <span class="m">1</span><span class="o">)</span> <span class="o">{</span>
					<span class="k">var</span> <span class="nx">fld</span> <span class="o">=</span> <span class="nx">nodes</span><span class="o">[</span><span class="nx">i</span><span class="o">],</span>
                        <span class="nx">tagName</span> <span class="o">=</span> <span class="nx">_YD</span><span class="o">.</span><span class="nx">getTagName</span><span class="o">(</span><span class="nx">fld</span><span class="o">),</span>
                        <span class="nx">isValidTag</span> <span class="o">=</span> <span class="o">(</span><span class="s1">&#39;input&#39;</span> <span class="o">===</span> <span class="nx">tagName</span> <span class="o">||</span> <span class="s1">&#39;textarea&#39;</span> <span class="o">===</span> <span class="nx">tagName</span> <span class="o">||</span> <span class="s1">&#39;select&#39;</span> <span class="o">===</span> <span class="nx">tagName</span><span class="o">),</span>
                        <span class="nx">isValidName</span> <span class="o">=</span> <span class="o">(!</span> <span class="nx">fldName</span> <span class="o">||</span> <span class="nx">fldName</span> <span class="o">===</span> <span class="nx">fld</span><span class="o">.</span><span class="nx">name</span><span class="o">);</span>

					<span class="k">if</span> <span class="o">(</span><span class="nx">isValidTag</span> <span class="o">&amp;&amp;</span> <span class="nx">isValidName</span> <span class="o">&amp;&amp;</span> <span class="o">-</span><span class="m">1</span> <span class="o">===</span> <span class="nx">ignoreTypes</span><span class="o">.</span><span class="nx">indexOf</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">getType</span><span class="o">(</span><span class="nx">fld</span><span class="o">)))</span> <span class="o">{</span>
						<span class="nx">set</span><span class="o">.</span><span class="nx">push</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>
					<span class="o">}</span>
					<span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nx">fld</span><span class="o">.</span><span class="nx">childNodes</span><span class="o">.</span><span class="nx">length</span><span class="o">)</span> <span class="o">{</span>
						<span class="nx">fn</span><span class="o">(</span><span class="nx">fld</span><span class="o">.</span><span class="nx">childNodes</span><span class="o">);</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">};</span>

			<span class="nx">fn</span><span class="o">(</span><span class="nx">form</span><span class="o">.</span><span class="nx">childNodes</span><span class="o">);</span>

            <span class="k">return</span> <span class="nx">set</span><span class="o">;</span>
		<span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Retrieves all input elements of the form with typeName and/or name.</span>
<span class="c">		 * @method getElementsByName</span>
<span class="c">	     * @param elem {String|Element} Required. Pointer or string reference to DOM element to search.</span>
<span class="c">		 * @param typeName {String}	Optional. The type of input to filter by.</span>
<span class="c">	     * @param name {String} Optional. The name to filter by.</span>
<span class="c">		 * @param multi {Boolean} Optional. True, when mulitple elements use this name.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">getInputs</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">typeName</span><span class="o">,</span> <span class="nx">name</span><span class="o">,</span> <span class="nx">multi</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">);</span>
			<span class="k">if</span> <span class="o">(!</span> <span class="nx">multi</span> <span class="o">&amp;&amp;</span> <span class="nx">name</span> <span class="o">&amp;&amp;</span> <span class="nx">form</span><span class="o">[</span><span class="nx">name</span><span class="o">])</span> <span class="o">{</span><span class="k">return</span> <span class="o">[</span><span class="nx">form</span><span class="o">[</span><span class="nx">name</span><span class="o">]];}</span> <span class="c">// fast return for DOM compliant browsers, when name is provided; may cause issue if name is something like &#39;parentNode&#39;</span>
<span class="c"></span>			<span class="k">var</span> <span class="nx">fields</span> <span class="o">=</span> <span class="nx">form</span><span class="o">.</span><span class="nx">getElementsByTagName</span><span class="o">(</span><span class="s1">&#39;input&#39;</span><span class="o">);</span>

			<span class="k">if</span> <span class="o">(!</span> <span class="o">(</span><span class="nx">_YL</span><span class="o">.</span><span class="nx">isString</span><span class="o">(</span><span class="nx">typeName</span><span class="o">)</span> <span class="o">||</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">isString</span><span class="o">(</span><span class="nx">name</span><span class="o">))</span> <span class="o">&amp;&amp;</span> <span class="nb">Array</span><span class="o">.</span><span class="nx">get</span><span class="o">)</span> <span class="o">{</span><span class="k">return</span> <span class="nb">Array</span><span class="o">.</span><span class="nx">get</span><span class="o">(</span><span class="nx">fields</span><span class="o">);}</span>

			<span class="k">var</span> <span class="nx">matches</span> <span class="o">=</span> <span class="o">[];</span>
			<span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">fields</span><span class="o">,</span> <span class="k">function</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">if</span> <span class="o">((</span><span class="nx">typeName</span> <span class="o">&amp;&amp;</span> <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">getType</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">!==</span> <span class="nx">typeName</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="nx">name</span> <span class="o">&amp;&amp;</span> <span class="nx">fld</span><span class="o">.</span><span class="nx">name</span> <span class="o">!==</span> <span class="nx">name</span><span class="o">))</span> <span class="o">{</span><span class="k">return</span><span class="o">;}</span>
				<span class="nx">matches</span><span class="o">.</span><span class="nx">push</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>
			<span class="o">});</span>

			<span class="k">return</span> <span class="nx">matches</span><span class="o">;</span>
		<span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Serializes the form into a query string, collection &amp;key=value pairs.</span>
<span class="c">		 * @method serialize</span>
<span class="c">	     * @param elem {String|Element} Required. The pointer or string reference to DOM Form element.</span>
<span class="c">	     * @return {String} The serialized form.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">serialize</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">var</span> <span class="nx">queryComponents</span> <span class="o">=</span> <span class="o">[];</span>

			<span class="nx">_YL</span><span class="o">.</span><span class="nx">arrayWalk</span><span class="o">(</span><span class="nx">_YF</span><span class="o">.</span><span class="nx">getFields</span><span class="o">(</span><span class="nx">elem</span><span class="o">),</span> <span class="k">function</span><span class="o">(</span><span class="nx">fld</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">var</span> <span class="nx">qc</span> <span class="o">=</span> <span class="nx">_YF</span><span class="o">.</span><span class="nx">Element</span><span class="o">.</span><span class="nx">serialize</span><span class="o">(</span><span class="nx">fld</span><span class="o">);</span>
				<span class="k">if</span> <span class="o">(</span><span class="nx">qc</span><span class="o">)</span> <span class="o">{</span><span class="nx">queryComponents</span><span class="o">.</span><span class="nx">push</span><span class="o">(</span><span class="nx">qc</span><span class="o">);}</span>
			<span class="o">});</span>

			<span class="k">return</span> <span class="nx">queryComponents</span><span class="o">.</span><span class="nx">join</span><span class="o">(</span><span class="s1">&#39;&amp;&#39;</span><span class="o">);</span>
		<span class="o">},</span>

		<span class="c">/**</span>
<span class="c">		 * Enables the value of the field.</span>
<span class="c">		 * @method toggleEnabled</span>
<span class="c">	     * @param elem {String|Element} Required. Pointer or string reference to DOM element to enable fields of.</span>
<span class="c">		 * @param b {Boolean} Optional. True, when enabling, falsy to disable.</span>
<span class="c">		 * @static</span>
<span class="c">		 */</span>
		<span class="nx">toggleEnabled</span><span class="o">:</span> <span class="k">function</span><span class="o">(</span><span class="nx">elem</span><span class="o">,</span> <span class="nx">b</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">var</span> <span class="nx">form</span> <span class="o">=</span> <span class="nx">$</span><span class="o">(</span><span class="nx">elem</span><span class="o">);</span>
            
            <span class="k">if</span> <span class="o">(</span><span class="nx">form</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">var</span> <span class="nx">bool</span> <span class="o">=</span> <span class="nx">_YL</span><span class="o">.</span><span class="nx">isUndefined</span><span class="o">(</span><span class="nx">b</span><span class="o">)</span> <span class="o">?</span> <span class="o">!</span> <span class="nx">form</span><span class="o">.</span><span class="nx">disabled</span> <span class="o">:</span> <span class="nx">b</span><span class="o">;</span>
                <span class="nx">_YF</span><span class="o">[</span><span class="nx">bool</span> <span class="o">?</span> <span class="s1">&#39;enable&#39;</span> <span class="o">:</span> <span class="s1">&#39;disable&#39;</span><span class="o">](</span><span class="nx">form</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">};</span>

    <span class="nx">_YL</span><span class="o">.</span><span class="nx">augmentObject</span><span class="o">(</span><span class="nx">_YF</span><span class="o">,</span> <span class="nx">_that</span><span class="o">);</span>
<span class="o">})();</span>

<span class="o">}</span>
</pre></div>
